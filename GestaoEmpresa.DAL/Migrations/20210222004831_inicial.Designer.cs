// <auto-generated />
using System;
using GestaoEmpresa.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoEmpresa.DAL.Migrations
{
    [DbContext(typeof(GestaoContext))]
    [Migration("20210222004831_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestaoEmpresa.Dominio.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("emp_int_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("emp_str_nome");

                    b.HasKey("Id")
                        .HasName("PK_empId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("GestaoEmpresa.Dominio.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("func_int_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("func_str_cargo");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("emp_int_id");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("func_str_matricula");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("func_str_nome");

                    b.HasKey("Id")
                        .HasName("PK_funcId");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("GestaoEmpresa.Dominio.JornadaTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("jnd_int_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaFim")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jnd_str_diaFim");

                    b.Property<string>("DiaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jnd_str_diaInicio");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time(0)")
                        .HasColumnName("jnd_time_horaFim");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(0)")
                        .HasColumnName("jnd_time_horaInicio");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("func_int_id");

                    b.HasKey("Id")
                        .HasName("PK_jndId");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("JornadaTrabalho");
                });

            modelBuilder.Entity("GestaoEmpresa.Dominio.Empresa", b =>
                {
                    b.OwnsOne("GestaoEmpresa.Dominio.Cnpj", "Cnpj", b1 =>
                        {
                            b1.Property<int>("EmpresaId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("varchar(14)")
                                .HasColumnName("emp_str_cnpj");

                            b1.HasKey("EmpresaId");

                            b1.ToTable("Empresa");

                            b1.WithOwner()
                                .HasForeignKey("EmpresaId");
                        });

                    b.OwnsOne("GestaoEmpresa.Dominio.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("EmpresaId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .IsUnicode(true)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("emp_str_bairro");

                            b1.Property<string>("Cep")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("emp_str_cep");

                            b1.Property<string>("Cidade")
                                .IsUnicode(true)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("emp_str_cidade");

                            b1.Property<string>("Estado")
                                .IsUnicode(true)
                                .HasColumnType("varchar(100)")
                                .HasColumnName("emp_str_estado");

                            b1.Property<string>("Logradouro")
                                .HasMaxLength(250)
                                .IsUnicode(true)
                                .HasColumnType("varchar(250)")
                                .HasColumnName("emp_str_logradouro");

                            b1.HasKey("EmpresaId");

                            b1.ToTable("Empresa");

                            b1.WithOwner()
                                .HasForeignKey("EmpresaId");
                        });

                    b.Navigation("Cnpj");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("GestaoEmpresa.Dominio.Funcionario", b =>
                {
                    b.HasOne("GestaoEmpresa.Dominio.Empresa", null)
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_emp_func")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GestaoEmpresa.Dominio.Cpf", "Cpf", b1 =>
                        {
                            b1.Property<int>("FuncionarioId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("func_str_cpf");

                            b1.HasKey("FuncionarioId");

                            b1.ToTable("Funcionario");

                            b1.WithOwner()
                                .HasForeignKey("FuncionarioId");
                        });

                    b.OwnsOne("GestaoEmpresa.Dominio.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<int>("FuncionarioId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("func_str_bairro");

                            b1.Property<string>("Cep")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("func_str_cep");

                            b1.Property<string>("Cidade")
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("func_str_cidade");

                            b1.Property<string>("Estado")
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("func_str_estado");

                            b1.Property<string>("Logradouro")
                                .HasMaxLength(250)
                                .IsUnicode(true)
                                .HasColumnType("nvarchar(250)")
                                .HasColumnName("func_str_logradouro");

                            b1.HasKey("FuncionarioId");

                            b1.ToTable("Funcionario");

                            b1.WithOwner()
                                .HasForeignKey("FuncionarioId");
                        });

                    b.OwnsOne("GestaoEmpresa.Dominio.Pis", "Pis", b1 =>
                        {
                            b1.Property<int>("FuncionarioId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("func_str_pis");

                            b1.HasKey("FuncionarioId");

                            b1.ToTable("Funcionario");

                            b1.WithOwner()
                                .HasForeignKey("FuncionarioId");
                        });

                    b.Navigation("Cpf");

                    b.Navigation("Endereco");

                    b.Navigation("Pis");
                });

            modelBuilder.Entity("GestaoEmpresa.Dominio.JornadaTrabalho", b =>
                {
                    b.HasOne("GestaoEmpresa.Dominio.Funcionario", null)
                        .WithMany("Jornadas")
                        .HasForeignKey("IdFuncionario")
                        .HasConstraintName("FK_func_jnd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestaoEmpresa.Dominio.Empresa", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("GestaoEmpresa.Dominio.Funcionario", b =>
                {
                    b.Navigation("Jornadas");
                });
#pragma warning restore 612, 618
        }
    }
}
